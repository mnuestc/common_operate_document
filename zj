集中学习了项目组产品技术架构与核心理念，掌握了Linux基金会Fabric区块链基本技术特点与应用。同时围绕项目组Gaea与知识图谱项目实际需求，对虚拟化技术（K8S/Docker/Vagrant/libvirt）及Devops与CICD相关技术栈（Jenkins/Ansible/gitlab）具有一定深度的理解和掌握。此外在参与集团文化与技术培训，在对企业文化认同感与职业素养方面也有很大的提升。

2	试用期学习工作内容及成果（有何输出）：
2.1	K8S定制化环境部署安装工具开发 
可实现一键部署、开箱即用的定制化k8s测试环境,并具有简单的集群与集群间管理功能,采用技术栈：
a)	vagrant+libvirt：支持在物理机/虚机节点上定制生成批量虚机，并做预环境安装；
b)	ansible： 采用ansible-playbook实现实现K8S集群的二进制方式部署，并安装相关插件，后期也通过ansible-playbook对集群实现简单的维护管理。

2.2	 基于H3C测试开发云的CI/CD工具集成
结合项目组需求，在开发测试云码仓、本地开发编译环境与远程K8S部署环境间，构建了CICD的流水线，采用技术栈：Jenkins、Gitlab、Harbor、K8S： 
在git码仓中添加Jenkinsfile脚本，当提交到开发测试云码仓后，开发测试云webhook自动触发本地Jenkins工具，调用执行预先编排的Jenksifile脚本，从而实现新版源码的编译、镜像构建与上传，及K8S部署测试等流水线功能。

2.3	 基于K8S容器管理的服务调度器
采用python K8S库文件，通过加载目标K8S集群config，调用目标K8S集群apiserver接口，实现对指定POD/SERVICE等资源的调度管理：
适用方式：
a)	外部运行： 调度器可部署在K8S环境外运行,则本地或远程加载config；
b)	内部运行：调度器本身作为K8S环境中部署的service运行，由K8S创建服务账号，并基于角色访问控制（RBAC）进行权限管理与控制。
